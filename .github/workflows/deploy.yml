name: Deploy to Cloudflare Workers (Unified)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Unified Frontend + Backend to Cloudflare Workers
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Build Frontend
        env:
          NUXT_PUBLIC_API_BASE_URL: ${{ secrets.NUXT_PUBLIC_API_BASE_URL }}
        run: |
          cd packages/frontend
          npm run build
          echo "Frontend built to packages/frontend/dist/"
          
      - name: Prepare Unified Build
        run: |
          # 创建统一构建目录
          mkdir -p build/static
          mkdir -p build/worker
          mkdir -p build/shared
          
          # 复制前端构建产物到静态资源目录
          cp -r packages/frontend/dist/* build/static/
          
          # 复制后端源码到worker目录
          cp -r packages/backend/src/* build/worker/
          
          # 复制shared类型定义到worker同级目录，修复路径引用
          cp -r shared/* build/shared/
          
          # 修复所有引用shared模块的路径
          find build/worker -name "*.ts" -exec sed -i "s|../../../../shared/|../shared/|g" {} \;
          find build/worker -name "*.ts" -exec sed -i "s|../../../../../shared/|../shared/|g" {} \;
          
          echo "Build structure created:"
          find build -type f | head -20
          
      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          KV_NAMESPACE_ID: ${{ secrets.KV_NAMESPACE_ID }}
        run: |
          cd build
          
          # 创建 package.json 以包含必要的依赖
          cat > package.json << EOF
          {
            "name": "claude-relay-unified",
            "version": "1.0.0",
            "main": "worker/index.ts",
            "dependencies": {
              "@anthropic-ai/sdk": "^0.57.0",
              "@google/genai": "^1.12.0",
              "hono": "^4.0.0",
              "js-tiktoken": "^1.0.20",
              "openai": "^5.11.0"
            }
          }
          EOF
          
          # 动态创建 wrangler.toml 文件
          cat > wrangler.toml << EOF
          name = "claude-relay-unified"
          main = "worker/index.ts"
          compatibility_date = "2025-07-25"
          
          # Workers Assets 配置 - 统一服务前后端
          [assets]
          directory = "./static"
          # SPA 模式：未找到的路由返回 index.html
          not_found_handling = "single-page-application" 
          # API 路由优先处理
          run_worker_first = ["/api/*", "/v1/*", "/oauth/*"]
          
          [[kv_namespaces]]
          binding = "CLAUDE_RELAY_ADMIN_KV"
          id = "${KV_NAMESPACE_ID}"
          
          [triggers]
          crons = ["0 */6 * * *"]
          
          [vars]
          NODE_ENV = "production"
          
          [observability.logs]
          enabled = true
          EOF
          
          echo "Generated wrangler.toml content:"
          cat wrangler.toml
          
          # 安装构建依赖
          npm install
          
          echo "Deploying unified frontend + backend to Cloudflare Workers..."
          npx wrangler deploy --config wrangler.toml \
            --var ADMIN_USERNAME:"${{ secrets.ADMIN_USERNAME }}" \
            --var ADMIN_PASSWORD:"${{ secrets.ADMIN_PASSWORD }}"